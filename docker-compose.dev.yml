services:
  # Database
  db:
    image: postgres:15-alpine
    container_name: elysian-realm-db-dev
    restart: always
    environment:
      POSTGRES_DB: elysian-realm
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '5432:5432'
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Jaeger for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: elysian-realm-jaeger-dev
    restart: always
    ports:
      - '6831:6831/udp'   # Jaeger agent
      - '6832:6832/udp'   # Jaeger collector
      - '16686:16686'     # Jaeger UI
      - '14268:14268'     # Jaeger collector HTTP
      - '4317:4317'       # OTLP gRPC
      - '4318:4318'       # OTLP HTTP
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - LOG_LEVEL=debug
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:14269/"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API with hot reloading
  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: elysian-realm-backend-dev
    restart: always
    depends_on:
      db:
        condition: service_healthy
      jaeger:
        condition: service_started
    environment:
      - PORT=3000
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/elysian-realm?schema=public
      - JWT_SECRET=supersecretkey
      - REFRESH_TOKEN_SECRET=supersecretrefreshtokenkey
      - ACCESS_TOKEN_EXPIRES_IN=5m
      - REFRESH_TOKEN_EXPIRES_IN=60d
      - OTEL_SERVICE_NAME=elysian-realm-backend
      - OTEL_EXPORTER_TYPE=otlp
      - OTEL_OTLP_ENDPOINT=http://jaeger:4318
    ports:
      - '3000:3000'
      - '3001:3001'  # Health check port
    volumes:
      - .:/app
      - /app/node_modules
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend with hot reloading
  frontend:
    build:
      context: .
      dockerfile: client/Dockerfile.dev
    container_name: elysian-realm-frontend-dev
    restart: always
    depends_on:
      - backend
    ports:
      - '5173:5173'
    volumes:
      - ./client:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:5173/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  db_data: